# Functions
# Statements
library(plyr)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd); str(gii)
summary(hd); summary(gii)
colnames(hd) <- c("HDIr", "Country", "HDI", "LEAB", "ExpYEd", "MeanYEd", "GNICapita", "GNI-HDI")
colnames(gii) <- c("GII", "Country", "GII", "MatMortRatio", "ABR", "ParlRep", "edu2F", "edu2M", "LabourF", "LabourM")
gii <- mutate(gii, FMratio = edu2F / edu2M)
gii <- mutate(gii, labourRatio = LabourF / LabourM)
human <- inner_join(x = hd, y = gii, by = "Country")
write.csv(human, "~/GitHub/IODS-project/data/human.csv")
###################
# Week 5
library(dplyr)
library(stringr)
# 1
human <- mutate(human, GNICapita = as.numeric(GNICapita, decimal="," ))
human$GNICapita <- str_replace(human$GNICapita, pattern=",", replace ="") %>% as.numeric
human <- human[, colnames(human) %in% c( "Country", "edu2F", "LabourF", "ExpYEd", "LEAB", "GNICapita", "MatMortRatio", "ABR", "ParlRep")]
human <- human[complete.cases(human), ]
# Regions out
notRegions <- nrow(human) - 7
human <- human[1:notRegions, ]
# Define row names with country name
rownames(human) <- human$Country
human$Country <- NULL
write.csv(human, "~/GitHub/IODS-project/data/human.csv", row.names = rownames(human))
library(plyr)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd); str(gii)
summary(hd); summary(gii)
colnames(hd) <- c("HDIr", "Country", "HDI", "LEAB", "ExpYEd", "MeanYEd", "GNICapita", "GNI-HDI")
colnames(gii) <- c("GII", "Country", "GII", "MatMortRatio", "ABR", "ParlRep", "edu2F", "edu2M", "LabourF", "LabourM")
gii <- mutate(gii, FMratio = edu2F / edu2M)
gii <- mutate(gii, labourRatio = LabourF / LabourM)
human <- inner_join(x = hd, y = gii, by = "Country")
write.csv(human, "~/GitHub/IODS-project/data/human.csv")
library(dplyr)
library(stringr)
mutate(human, GNICapita = as.numeric(GNICapita, decimal="," ))
# Author: Riku Laine
# Date: Tue Nov 28 11:49:59 2017
# Project name: Riku Laine
# Description
# --------------
# Author:
# Date:
# Modification:
# --------------
# Preparations (source() and library())
# Importing data
# Functions
# Statements
library(plyr)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd); str(gii)
summary(hd); summary(gii)
colnames(hd) <- c("HDIr", "Country", "HDI", "LEAB", "ExpYEd", "MeanYEd", "GNICapita", "GNI-HDI")
colnames(gii) <- c("GII", "Country", "GII", "MatMortRatio", "ABR", "ParlRep", "edu2F", "edu2M", "LabourF", "LabourM")
gii <- mutate(gii, FMratio = edu2F / edu2M)
gii <- mutate(gii, labourRatio = LabourF / LabourM)
human <- inner_join(x = hd, y = gii, by = "Country")
write.csv(human, "~/GitHub/IODS-project/data/human.csv")
###################
# Week 5
library(dplyr)
library(stringr)
# 1
human$GNICapita <- str_replace(human$GNICapita, pattern=",", replace ="") %>% as.numeric
human <- human[, colnames(human) %in% c( "Country", "edu2F", "LabourF", "ExpYEd", "LEAB", "GNICapita", "MatMortRatio", "ABR", "ParlRep")]
human <- human[complete.cases(human), ]
# Regions out
notRegions <- nrow(human) - 7
human <- human[1:notRegions, ]
# Define row names with country name
rownames(human) <- human$Country
human$Country <- NULL
write.csv(human, "~/GitHub/IODS-project/data/human.csv", row.names = rownames(human))
rm(list=ls())
human <- read.csv("~/GitHub/IODS-project/data/human.csv")
head(human)
human <- read.csv("~/GitHub/IODS-project/data/human.csv", row.names = T)
human <- read.csv("~/GitHub/IODS-project/data/human.csv", row.names = 1)
str(huma)
str(human)
a <- str(human)
a
rm(a)
str(human)
cor(human)
round(cor(human), digits = 2)
corrplot(round(cor(human), digits = 2))
?corrplot
?corplot
??corrplot
library(corrplot)
corrplot(round(cor(human), digits = 2))
ggpairs(human)
library(GGally)
ggpairs(human)
human_scaled <- scale(human)
pca_human <- prcomp(human_scaled)
biplot(pca_human)
biplot(pca_human, cex=c(0.6,1))
biplot(pca_human, choices=1:2, cex=c(0.6,1))
human_scaled <- scale(human)
pca_human <- prcomp(human)
biplot(pca_human, choices=1:2, cex=c(0.6,1))
biplot(pca_human, choices=1:2, cex=c(0.6,1), main = "test")
human_scaled <- scale(human)
pca_human <- prcomp(human)
cat("Not standardized")
biplot(pca_human, choices=1:2, cex=c(0.6,1))
pca_human_scaled <- prcomp(human_scaled)
cat("Standardized")
biplot(pca_human_scaled, choices=1:2, cex=c(0.6,1))
Factominer::data("Tea")
?tea
??tea
data("Tea")
FactoMineR::data("Tea")
tea
FactoMineR::data(Tea)
FactoMineR::data(tea)
install.packages("FactoMineR")
FactoMineR::data(tea)
library(FactoMineR)
sessionInfo()
data(tea)
mca(tea, graph = T)
library(FactoMineR)
data(tea)
str(tea) #Dimensions and structure
mca(tea, graph = T)
library(FactoMineR)
data(tea)
str(tea) #Dimensions and structure
MCA(tea, graph = T)
MCA(tea[, sample(1:nrow(tea), 10)], graph = T)
sample(1:nrow(tea), 10)
tea[, sample(1:nrow(tea), 10)]
MCA(tea[, sample(1:ncol(tea), 10)], graph = T)
library(FactoMineR)
data(tea)
str(tea) #Dimensions and structure
set.seed(42)
summary(MCA(tea[, sample(1:ncol(tea), 10)], graph = T))
MCA(tea[, sample(1:ncol(tea), 10)], graph = T)
mca <- MCA(tea[, sample(1:ncol(tea), 10)], graph = T)
library(corrplot)
library(GGally)
human <- read.csv("~/GitHub/IODS-project/data/human.csv", row.names = 1)
str(human)
corrplot(round(cor(human), digits = 2))
ggpairs(human)
human_scaled <- scale(human)
pca_human <- prcomp(human)
cat("Not standardized")
biplot(pca_human, choices=1:2, cex=c(0.6,1))
pca_human_scaled <- prcomp(human_scaled)
cat("Standardized")
biplot(pca_human_scaled, choices=1:2, cex=c(0.6,1))
library(FactoMineR)
data(tea)
str(tea) #Dimensions and structure
set.seed(42)
mca <- MCA(tea[, sample(1:ncol(tea), 10)], graph = T)
sample(1:ncol(tea), 10)
mca <- MCA(tea[, sample(1:ncol(tea), 10)], graph = F)
summary(mca)
plot(mca, invisible=c("ind"), habillage = "quali")
library(FactoMineR)
data(tea)
str(tea) #Dimensions and structure
set.seed(42)
mca <- MCA(tea[, sample(1:ncol(tea), 10)], graph = F)
MCA(tea[, sample(1:ncol(tea), 10)], graph = F)
mca <- MCA(tea[, sample(1:ncol(tea), 10)], graph = F)
library(corrplot)
library(GGally)
human <- read.csv("~/GitHub/IODS-project/data/human.csv", row.names = 1)
str(human)
corrplot(round(cor(human), digits = 2))
ggpairs(human)
human_scaled <- scale(human)
pca_human <- prcomp(human)
cat("Not standardized")
biplot(pca_human, choices=1:2, cex=c(0.6,1))
pca_human_scaled <- prcomp(human_scaled)
cat("Standardized")
biplot(pca_human_scaled, choices=1:2, cex=c(0.6,1))
library(FactoMineR)
data(tea)
str(tea) #Dimensions and structure
set.seed(42)
mca <- MCA(tea[, sample(1:ncol(tea), 10)], graph = F)
MCA(tea[, sample(1:ncol(tea), 10)], graph = F)
colnames(tea)
MCA(tea[, sample(1:ncol(tea), 10)], graph = F)
mca <- MCA(tea[, sample(1:ncol(tea), 10)], graph = F)
set.seed(42)
mca <- MCA(tea[, sample(1:ncol(tea), 10)], graph = F)
set.seed(42)
sample(1:ncol(tea), 10)
tea[, sample(1:ncol(tea), 10)]
set.seed(42)
tea[, sample(1:ncol(tea), 10)]
set.seed(777)
mca <- MCA(tea[, sample(1:ncol(tea), 10)], graph = F)
set.seed(2017)
mca <- MCA(tea[, sample(1:ncol(tea), 10)], graph = F)
set.seed(2017)
mca <- MCA(tea[, sample(1:ncol(tea), 10)-1], graph = F)
library(knitr)
library(corrplot)
library(GGally)
human <- read.csv("~/GitHub/IODS-project/data/human.csv", row.names = 1)
str(human)
library(knitr)
corrplot(round(cor(human), digits = 2))
ggpairs(human)
human_scaled <- scale(human)
pca_human <- prcomp(human)
cat("Not standardized")
biplot(pca_human, choices=1:2, cex=c(0.6,1))
pca_human_scaled <- prcomp(human_scaled)
cat("Standardized")
biplot(pca_human_scaled, choices=1:2, cex=c(0.6,1))
library(FactoMineR)
data(tea)
str(tea) #Dimensions and structure
set.seed(2017)
mca <- MCA(tea[, sample(1:ncol(tea), 8)-1], graph = F)
summary(mca)
plot(mca, invisible=c("ind"), habillage = "quali")
taulu <- cbind(colnames(human), c("Life expectancy at birth", "Expected years of schooling", "Gross National Income per capita", "Maternal mortality ratio", "Adolescent birth rate", "Percentange of female representatives in parliament", "Proportion of females with at least secondary education"))
colnames(human)
taulu <- cbind(colnames(human), c("Life expectancy at birth", "Expected years of schooling", "Gross National Income per capita", "Maternal mortality ratio", "Adolescent birth rate", "Percentange of female representatives in parliament", "Proportion of females with at least secondary education", "Proportion of females in the labour force"))
class(taullu)
class(taulu)
plot(cars)
qnaire <- read.csv("~/Moodi/opintokysely.csv")
head(qnaire)
qnaire <- read.csv2("~/Moodi/opintokysely.csv")
head(qnaire)
colnames(qnaire)
colnames(qnaire)[4:7]
colnames(qnaire)[19:23]
colnames(qnaire)[4:8]
colnames(qnaire)[4:9]
colnames(qnaire)[1:3] <- c("Time", "Language", "NewOld")
colnames(qnaire)[1:8]
head(qnaire$NewOld)
levels(qnaire$NewOld)
qnaire$X.1
uudet <- qnaire[qnaire$NewOld=="Opiskelen nykyisten tutkintovaatimuksien mukaisesti", ]
vanhat <- qnaire[qnaire$NewOld=="Opiskelen vanhojen tutkintovaatimuksien mukaisesti", ]
enkku <- tail(qnaire, 3)
apply(uudet, 2, function(x) all(is.na(x)))
uudet <- uudet[, apply(uudet, 2, function(x) all(is.na(x)))]
uudet <- uudet[, apply(uudet, 2, function(x) all(is.na(x)))]
vanhat <- vanhat[, apply(vanhat, 2, function(x) all(is.na(x)))]
enkku <- enkku[, apply(enkku, 2, function(x) all(is.na(x)))]
apply(uudet, 2, function(x) all(is.na(x)))
qnaire <- read.csv2("~/Moodi/opintokysely.csv")
colnames(qnaire)[1:3] <- c("Time", "Language", "NewOld")
uudet <- qnaire[qnaire$NewOld=="Opiskelen nykyisten tutkintovaatimuksien mukaisesti", ]
vanhat <- qnaire[qnaire$NewOld=="Opiskelen vanhojen tutkintovaatimuksien mukaisesti", ]
enkku <- tail(qnaire, 3)
uudet <- uudet[, apply(uudet, 2, function(x) !all(is.na(x)))]
vanhat <- vanhat[, apply(vanhat, 2, function(x) !all(is.na(x)))]
enkku <- enkku[, apply(enkku, 2, function(x) !all(is.na(x)))]
uudet$Koulutusohjelmasi
table(uudet$Koulutusohjelmasi)
uudet <- droplevels(uudet[, apply(uudet, 2, function(x) !all(is.na(x)))])
table(uudet$Koulutusohjelmasi)
uudet <- droplevels(uudet[, apply(uudet, 2, function(x) !all(is.na(x)))])
vanhat <- droplevels(vanhat[, apply(vanhat, 2, function(x) !all(is.na(x)))])
enkku <- droplevels(enkku[, apply(enkku, 2, function(x) !all(is.na(x)))])
plot(uudet$Koulutusohjelmani.nimi.on.selkeä)
hist(uudet$Koulutusohjelmani.nimi.on.selkeä)
library(ggplot2)
qplot(uudet$Koulutusohjelmani.nimi.on.selkeä)
ggplot(uudet$Koulutusohjelmani.nimi.on.selkeä)+geom_histogram()
plot(cars)
library(knitr)
opts_chunk$set(message = F)
opts_chunk$set(warning = F)
lrn14
url <- "http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt"
learning2014 <- read.table(file = url, sep = '\t', header = T)
colnames(learning2014)
an_data <- dplyr::select(learning2014, gender, Age, Attitude, Points)
learning2014$D03
deep.columns <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30", "D06", "D15", "D23", "D31")
surface.columns <- c("SU02", "SU10", "SU18", "SU26", "SU05", "SU13", "SU21", "SU29", "SU08", "SU16", "SU24", "SU32")
strategic.columns <- c("ST01", "ST09", "ST17", "ST25", "ST04", "ST12", "ST20", "ST28")
length(deep.columns)
length(surface.columns)
length(strategic.columns)
an.data <- mutate(an.data, Deep = rowMeans(dplyr::select(learning2014, deep.columns)))
library(dplyr)
?mutate
an.data <- mutate(an.data, Deep = rowMeans(dplyr::select(learning2014, deep.columns)))
rm(list=ls())
# Author: Riku Laine
# Date: Mon Dec 11 13:43:43 2017
# Project name: IODS final project - Data wrangling
# Description
# --------------
# Author:
# Date:
# Modification:
# --------------
# Preparations (source() and library())
# Importing libraries
library(MASS)
library(dplyr)
# Reading in the data
url <- "http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt"
learning2014 <- read.table(file = url, sep = '\t', header = T)
# Let's select the base variables gender, Age, Attitude and Points from
# data frame learning2014.
an.data <- dplyr::select(learning2014, gender, Age, Attitude, Points)
# Constructing the variables as was instructed by Kimmo in the
# meta page.
deep.columns <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30", "D06", "D15", "D23", "D31")
surface.columns <- c("SU02", "SU10", "SU18", "SU26", "SU05", "SU13", "SU21", "SU29", "SU08", "SU16", "SU24", "SU32")
strategic.columns <- c("ST01", "ST09", "ST17", "ST25", "ST04", "ST12", "ST20", "ST28")
an.data <- mutate(an.data, Deep = rowMeans(dplyr::select(learning2014, deep.columns)))
an.data <- mutate(an.data, Surf = rowMeans(dplyr::select(learning2014, surface.columns)))
an.data <- mutate(an.data, Stra = rowMeans(dplyr::select(learning2014, strategic.columns)))
# Omit observations which had zero points from the final exam.
an.data <- an.data[an.data$Points!=0,]
head(an.data)
dim(an.data)
setwd(dir = "~/GitHub/IODS-final/data/")
write.csv(an.data, file = "learning2014.csv", row.names = F)
testing<- read.csv("learning2014.csv")
str(testing)
head(testing)
head(learning2014)
head(an.data)
attach(learning2014)
an.data <- mutate(an.data, SeekingMeaning = D03+D11+D19+D27)
rm(list=ls())
library(MASS)
library(dplyr)
url <- "http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt"
learning2014 <- read.table(file = url, sep = '\t', header = T)
an.data <- dplyr::select(learning2014, gender, Age, Attitude, Points)
attach(learning2014)
an.data <- mutate(an.data, SeekingMeaning = D03+D11+D19+D27)
an.data <- mutate(an.data, RelatingIdeas  = D07+D14+D22+D30)
an.data <- mutate(an.data, UseOfEvidence = D06+D15+D23+D31)
an.data <- mutate(an.data, LackOfPurpose = SU02+SU10+SU18+SU26)
an.data <- mutate(an.data, UnrelatedMemorising = SU05+SU13+SU21+SU29)
an.data <- mutate(an.data, SyllabusBoundness = SU08+SU16+SU24+SU32)
an.data <- mutate(an.data, OrganizedStudying = ST01+ST09+ST17+ST25)
# Author: Riku Laine
# Email: riku.laine@helsinki.fi
# Date: Mon Dec 11 13:43:43 2017
# Project name: IODS final project - Data wrangling
# Description
# This script is for creating the "learning2014" data set for Helsinki
# University's Introduction to Open data Science course. The data is acquired
# from http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt. Google's
# R Style Guide was tried to be followed in the making of this script.
# --------------
# Author:
# Date:
# Modification:
# --------------
# Preparations (source() and library())
# Importing libraries
library(MASS)
library(dplyr)
# Reading in the data
url <- "http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt"
learning2014 <- read.table(file = url, sep = '\t', header = T)
# Let's select the base variables gender, Age, Attitude and Points from
# data frame learning2014.
an.data <- dplyr::select(learning2014, gender, Age, Attitude, Points)
# Constructing the variables as was instructed in the meta page
# here: http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS2-meta.txt.
attach(learning2014)
an.data <- mutate(an.data, SeekingMeaning =  (D03+D11+D19+D27)/4)
an.data <- mutate(an.data, RelatingIdeas  =  (D07+D14+D22+D30)/4)
an.data <- mutate(an.data, UseOfEvidence =  (D06+D15+D23+D31)/4)
an.data <- mutate(an.data, LackOfPurpose =  (SU02+SU10+SU18+SU26)/4)
an.data <- mutate(an.data, UnrelatedMemorising =  (SU05+SU13+SU21+SU29)/4)
an.data <- mutate(an.data, SyllabusBoundness =  (SU08+SU16+SU24+SU32)/4)
an.data <- mutate(an.data, OrganizedStudying =  (ST01+ST09+ST17+ST25)/4)
an.data <- mutate(an.data, TimeManagement =  (ST04+ST12+ST20+ST28)/4)
detach(learning2014)
attach(learning2014)
# Author: Riku Laine
# Email: riku.laine@helsinki.fi
# Date: Mon Dec 11 13:43:43 2017
# Project name: IODS final project - Data wrangling
# Description
# This script is for creating the "learning2014" data set for Helsinki
# University's Introduction to Open data Science course. The data is acquired
# from http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt. Google's
# R Style Guide was tried to be followed in the making of this script.
# --------------
# Author:
# Date:
# Modification:
# --------------
# Preparations (source() and library())
# Importing libraries
library(MASS)
library(dplyr)
# Reading in the data
url <- "http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt"
learning2014 <- read.table(file = url, sep = '\t', header = T)
# Let's select the base variables gender, Age, Attitude and Points from
# data frame learning2014.
an.data <- dplyr::select(learning2014, gender, Age, Attitude, Points)
# Constructing the variables as was instructed in the meta page
# here: http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS2-meta.txt.
# I decided to construct the partial variables to getmore variables.
attach(learning2014)
an.data <- mutate(an.data, SeekingMeaning =  (D03+D11+D19+D27)/4)
an.data <- mutate(an.data, RelatingIdeas  =  (D07+D14+D22+D30)/4)
an.data <- mutate(an.data, UseOfEvidence =  (D06+D15+D23+D31)/4)
an.data <- mutate(an.data, LackOfPurpose =  (SU02+SU10+SU18+SU26)/4)
an.data <- mutate(an.data, UnrelatedMemorising =  (SU05+SU13+SU21+SU29)/4)
an.data <- mutate(an.data, SyllabusBoundness =  (SU08+SU16+SU24+SU32)/4)
an.data <- mutate(an.data, OrganizedStudying =  (ST01+ST09+ST17+ST25)/4)
an.data <- mutate(an.data, TimeManagement =  (ST04+ST12+ST20+ST28)/4)
detach(learning2014)
deep.columns <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30", "D06", "D15", "D23", "D31")
surface.columns <- c("SU02", "SU10", "SU18", "SU26", "SU05", "SU13", "SU21", "SU29", "SU08", "SU16", "SU24", "SU32")
strategic.columns <- c("ST01", "ST09", "ST17", "ST25", "ST04", "ST12", "ST20", "ST28")
an.data <- mutate(an.data, Deep = rowMeans(dplyr::select(learning2014, deep.columns)))
an.data <- mutate(an.data, Surf = rowMeans(dplyr::select(learning2014, surface.columns)))
an.data <- mutate(an.data, Stra = rowMeans(dplyr::select(learning2014, strategic.columns)))
# Omit observations which had zero points from the final exam.
an.data <- an.data[an.data$Points!=0,]
# Set working directory and write the an.data data frame there excluding row names.
setwd(dir = "~/GitHub/IODS-final/data/")
write.csv(an.data, file = "learning2014.csv", row.names = F)
plot(cars)
colnames(learning2014)
colnames(an.data)
# Author: Riku Laine
# Email: riku.laine@helsinki.fi
# Date: Mon Dec 11 13:43:43 2017
# Project name: IODS final project - Data wrangling
# Description
# This script is for creating the "learning2014" data set for Helsinki
# University's Introduction to Open data Science course. The data is acquired
# from http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt. Google's
# R Style Guide was tried to be followed in the making of this script.
# --------------
# Author:
# Date:
# Modification:
# --------------
# Preparations (source() and library())
# Importing libraries
library(MASS)
library(dplyr)
# Reading in the data
url <- "http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS3-data.txt"
learning2014 <- read.table(file = url, sep = '\t', header = T)
# Let's select the base variables gender, Age, Attitude and Points from
# data frame learning2014.
an.data <- dplyr::select(learning2014, gender, Age, Attitude, Points)
# Constructing the variables as was instructed in the meta page
# here: http://www.helsinki.fi/~kvehkala/JYTmooc/JYTOPKYS2-meta.txt.
# I decided to construct the partial variables to getmore variables.
attach(learning2014)
an.data <- mutate(an.data, SeekingMeaning =  (D03+D11+D19+D27)/4)
an.data <- mutate(an.data, RelatingIdeas  =  (D07+D14+D22+D30)/4)
an.data <- mutate(an.data, UseOfEvidence =  (D06+D15+D23+D31)/4)
an.data <- mutate(an.data, LackOfPurpose =  (SU02+SU10+SU18+SU26)/4)
an.data <- mutate(an.data, UnrelatedMemorising =  (SU05+SU13+SU21+SU29)/4)
an.data <- mutate(an.data, SyllabusBoundness =  (SU08+SU16+SU24+SU32)/4)
an.data <- mutate(an.data, OrganizedStudying =  (ST01+ST09+ST17+ST25)/4)
an.data <- mutate(an.data, TimeManagement =  (ST04+ST12+ST20+ST28)/4)
detach(learning2014)
deep.columns <- c("D03", "D11", "D19", "D27", "D07", "D14", "D22", "D30", "D06", "D15", "D23", "D31")
surface.columns <- c("SU02", "SU10", "SU18", "SU26", "SU05", "SU13", "SU21", "SU29", "SU08", "SU16", "SU24", "SU32")
strategic.columns <- c("ST01", "ST09", "ST17", "ST25", "ST04", "ST12", "ST20", "ST28")
an.data <- mutate(an.data, Deep = rowMeans(dplyr::select(learning2014, deep.columns)))
an.data <- mutate(an.data, Surf = rowMeans(dplyr::select(learning2014, surface.columns)))
an.data <- mutate(an.data, Stra = rowMeans(dplyr::select(learning2014, strategic.columns)))
# Omit observations which had zero points from the final exam.
an.data <- an.data[an.data$Points!=0,]
colnames(an.data)[1] <- "Gender"
# Set working directory and write the an.data data frame there excluding row names.
setwd(dir = "~/GitHub/IODS-final/data/")
write.csv(an.data, file = "learning2014.csv", row.names = F)
colnames(an.data)
plot(an.data$Attitude, an.data$Points)
abline(lm(Points ~ Attitude, data=an.data))
summary(lm(Points ~ Attitude, data=an.data))
plot(an.data$Attitude, jitter(an.data$Points))
plot(jitter(an.data$Attitude), jitter(an.data$Points))
plot(jitter(an.data$Attitude), jitter(an.data$Points, amount = 3))
plot(jitter(an.data$Attitude), jitter(an.data$Points, amount = 2))
plot(jitter(an.data$Attitude), jitter(an.data$Points, amount = 1))
plot(jitter(an.data$Attitude, amount=1), jitter(an.data$Points, amount = 1))
corr(an.data$Attitude, an.data$Points)
cor(an.data$Attitude, an.data$Points)
